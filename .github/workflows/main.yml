name: main CI
on: 
  push:
    branches: 
      - main
    tags: 
      - '*'
  pull_request:
    branches:
      - main

jobs: 

  document:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          
      - name: Install dependencies
        run: |
          sudo apt-get install graphviz || sudo yum install graphviz || brew install graphviz
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
          python -m pip install .
          python -m pip show msiempy

      - name: Build documentation
        run: |

          git clone https://github.com/mfesiem/mfesiem.github.io

          ./build_docs.sh -o "./mfesiem.github.io/docs/msiempy"

      - name: Publish documentation to mfesiem.github.io/docs/msiempy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.MFESIEM_GITHUB_IO_PRIVATE_KEY }}
          external_repository: mfesiem/mfesiem.github.io
          publish_dir: mfesiem.github.io
          publish_branch: 'master'
          user_name: 'Github Actions'
          user_email: "actions@github.com"
          commit_message: "Generate documentation - main"
          enable_jekyll: true

  tests:
    name: test ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }} 

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.6','3.7','3.8','3.9']
      max-parallel: 1
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
          python -m pip install .
          python -m pip show msiempy

      - name: Setup msiempy config
        run: python ./samples/msiempy_setup.py --set esm host ${{ secrets.esmhost }} --set esm user NGCP --set esm passwd ${{ secrets.esmpass }} --set general timeout 60
      
      - name: Run tests
        run: python -m pytest --cov=./ --cov-report=xml --reruns 5 --reruns-delay 30
      
      - name: Upload code coverage
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: msiempy-code-coverage
          yml: ./codecov.yml 
          fail_ci_if_error: true
  
  release:
    needs: [ document, tests ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: Log system information
        run: |
          test -r /etc/os-release && sh -c '. /etc/os-release && echo "OS: $PRETTY_NAME"'
          python --version
          python -c "print('\nENVIRONMENT VARIABLES\n=====================\n')"
          python -c "import os; [print(f'{k}={v}') for k, v in os.environ.items()]"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
          python -m pip install .
          python -m pip show msiempy

      - name: Build msiempy
        run: |
          python setup.py --quiet build check sdist bdist_wheel
          ls -alh ./dist/

      - name: Publish msiempy to PyPI on tags
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
