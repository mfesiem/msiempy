name: publish
on: 
  push:
    branches: 
      - master
jobs: 
  deploy:
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }} 

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8']
      max-parallel: 1
      fail-fast: false

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python setup.py install

      - name: 'Wait for status checks'
        id: waitforstatuschecks
        uses: "WyriHaximus/github-action-wait-for-status@v2"
        with:
          ignoreActions: automerge
          checkInterval: 13
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
      # - name: 'Merge'
      #   uses: "pascalgn/automerge-action@v0.4.0"
        
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      #     LABELS: automerge

      - name: Lint code with black
        run: |
          black "msiempy/"
          black "tests/"
          black "samples/"

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Lint code with black" -a

      - name: Publish linted code
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: git@github.com:mfesiem/msiempy.git
          BRANCH: master
          FOLDER: ./
          MESSAGE: "publish\n{msg}"
          SSH_PRIVATE_KEY: ${{ secrets.MSIEMPY_PRIVATE_KEY }}

      - name: Generate documentation
        if: steps.waitforstatuschecks.outputs.status == 'success'
        run: |
          git clone https://github.com/mfesiem/mfesiem.github.io
          pyreverse -s 1 -f PUB_ONLY -o png -m y msiempy
          rm -rf ./mfesiem.github.io/docs/msiempy/
          python3 -m pdoc msiempy --output-dir ./mfesiem.github.io/docs --html --force --template-dir ./.pdoc_templates
          mv ./classes.png ./mfesiem.github.io/docs/msiempy
          mv ./packages.png ./mfesiem.github.io/docs/msiempy
          cd ./mfesiem.github.io && git add ./docs/test/msiempy && git commit "Generated mfesiem.github.io/docs/test/msiempy" $$ cd ..

      - name: Publish docs
        if: steps.waitforstatuschecks.outputs.status == 'success'
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: git@github.com:mfesiem/mfesiem.github.io.git
          BRANCH: master
          FOLDER: mfesiem.github.io
          SSH_PRIVATE_KEY: ${{ secrets.MFESIEM_GITHUB_IO_PRIVATE_KEY }}

      - name: Build msiempy
        if: steps.waitforstatuschecks.outputs.status == 'success'
        run: python3 setup.py --quiet build check sdist bdist_wheel

      - name: Publish msiempyn to PyPI
        if: steps.waitforstatuschecks.outputs.status == 'success'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
      